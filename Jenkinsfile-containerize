pipeline {
    agent any

    environment {
        CVE_OPERATOR_DOCKER_IMAGE = "anuragnandre/cve-operator"
        LATEST_TAG = ""
    }

    stages {
        stage('Checkout') {
            steps {
                script {
                    git branch: 'main',
                    credentialsId: 'github-ssh-key',
                    url: 'https://github.com/csye7125-su24-team14/cve-operator.git'
                }
            }
        }
        stage('Release') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'github-ssh-key', usernameVariable: 'GH_USERNAME', passwordVariable: 'GH_TOKEN')]) {
                    sh 'npm install @semantic-release/commit-analyzer'
                    sh 'npm install @semantic-release/release-notes-generator'
                    sh 'npm install @semantic-release/changelog'
                    sh 'npm install @semantic-release/npm'
                    sh 'npm install @semantic-release/git'
                    sh 'npm install @semantic-release/github'
                    sh 'npm install @semantic-release/exec'
                    sh "node --version"
                    sh 'npx semantic-release'     
                }
            }
        }
        stage('Create Builder and Latest Tag') {
            steps {
                script {
                    LATEST_TAG = sh(script: 'git describe --tags --abbrev=0', returnStdout: true).trim()
                    // Create and use a new builder instance
                    sh 'docker buildx create --use'
                }
            }
        }
        stage('Cve Operator Build & Push') {
            steps {
                script {
                     withCredentials([usernamePassword(credentialsId: 'docker-hub-credentials', usernameVariable: 'DOCKER_HUB_USERNAME', passwordVariable: 'DOCKER_HUB_PASSWORD')]) {
                        sh "echo ${DOCKER_HUB_PASSWORD} | docker login -u ${DOCKER_HUB_USERNAME} --password-stdin"
                    }
                    sh "docker build -t ${CVE_OPERATOR_DOCKER_IMAGE}:${LATEST_TAG} -t ${CVE_OPERATOR_DOCKER_IMAGE}:latest --push ."
                }
            }
        }
    }
    post {
        always {
            cleanWs()
        }
    }
}